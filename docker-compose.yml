version: '3.8'

services:
  rotate1:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN}
    image: tatu-rotate-1:v1
    restart: always
    hostname: rotate1
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.100
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8120:8118/tcp"

  rotate2:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN2}
    image: tatu-rotate-2:v1
    restart: always
    hostname: rotate2
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.101
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8121:8118/tcp"

  rotate3:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN3}
    image: tatu-rotate-3:v1
    restart: always
    hostname: rotate3
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.102
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8122:8118/tcp"

  rotate4:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN4}
    image: tatu-rotate-4:v1
    restart: always
    hostname: rotate4
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.103
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8123:8118/tcp"

  rotate5:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN5}
    image: tatu-rotate-5:v1
    restart: always
    hostname: rotate5
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.104
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8124:8118/tcp"

  rotate6:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN6}
    image: tatu-rotate-6:v1
    restart: always
    hostname: rotate6
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.105
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8125:8118/tcp"

  rotate7:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN7}
    image: tatu-rotate-7:v1
    restart: always
    hostname: rotate7
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.106
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8126:8118/tcp"

  rotate8:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN8}
    image: tatu-rotate-8:v1
    restart: always
    hostname: rotate8
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.107
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8127:8118/tcp"

  rotate9:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        - VPN_USER=${VPN_USER}
        - VPN_PASS=${VPN_PASS}
        - OVPN=${OVPN9}
    image: tatu-rotate-9:v1
    restart: always
    hostname: rotate9
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.108
    dns: [ "8.8.8.8", "1.1.1.1" ]
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8128:8118/tcp"

  rotate10:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.openvpn
      args:
        VPN_USER: ${VPN_USER}
        VPN_PASS: ${VPN_PASS}
        OVPN: ${OVPN10}
    image: tatu-rotate-10:v1
    restart: always
    hostname: rotate10
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.109
    dns:
      - "8.8.8.8"
      - "1.1.1.1"
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "8129:8118/tcp"

  mubeng:
    image: ghcr.io/kitabisa/mubeng:latest
    volumes:
      - ./config-templates:/data
    command: -a :8080 -f /data/proxies.txt -m sequent -r 1
    ports:
      - "8080:8080"
    depends_on:
      - rotate1
      - rotate2
      - rotate3
      - rotate4
      - rotate5
      - rotate6
      - rotate7
      - rotate8
      - rotate9
      - rotate10
    restart: always
    cap_add:
      - NET_ADMIN
    networks:
      global:
        ipv4_address: 10.47.0.200
    dns:
      - "8.8.8.8"
      - "1.1.1.1"

networks:
  global:
    driver: bridge
    ipam:
      config:
        - subnet: 10.47.0.0/24
